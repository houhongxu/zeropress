{"version":3,"sources":["../../src/node/cli.ts","../../src/node/constants.ts","../../src/node/plugins/vitePluginBuildImg.ts","../../src/node/plugins/remarkMdxToc.ts","../../src/node/plugins/vitePluginMdx.ts","../../src/node/plugins/vitePluginServeHtml.ts","../../src/node/plugins/vitePluginServeImg.ts","../../src/node/plugins/vitePluginTransformFrontmatter.ts","../../src/node/plugins/vitePluginVirtualConfig.ts","../../src/node/utils.ts","../../src/shared/utils.ts","../../src/node/plugins/vitePluginVirtualRoutes.ts","../../src/node/plugins/createPlugins.ts","../../src/node/tailwind.ts","../../src/node/build.ts","../../src/node/config.ts","../../src/node/server.ts"],"sourcesContent":["import { buildRuntime } from './build'\nimport { resolveSiteConfig } from './config'\nimport { ROOT_PATH } from './constants'\nimport { createRuntimeDevServer } from './server'\nimport { program } from 'commander'\nimport fse from 'fs-extra'\nimport path from 'path'\n\n// 作者推荐以单文件组织cli https://github.com/tj/commander.js/issues/983\n\nexport const cli = program\n\nconst { version } = fse.readJSONSync(path.join(ROOT_PATH, './package.json'))\n\ncli.name('zeropress').version(version)\n\ncli\n  .command('dev', { isDefault: true })\n  .description('dev server') // 单独使用description才使命令参数生效\n  .option('-p,--port <value>', 'dev server port')\n  .action(async ({ port }) => {\n    const createServer = async () => {\n      // 每次开启服务都要先读取配置文件\n      const siteConfig = await resolveSiteConfig({\n        mode: 'development',\n        command: 'serve',\n      })\n\n      const server = await createRuntimeDevServer({\n        siteConfig,\n        restartRuntimeDevServer: async () => {\n          await server.close()\n\n          await createServer()\n        },\n      })\n\n      await server.listen(port)\n\n      server.printUrls()\n\n      let isRestarting = false\n\n      server.watcher.on('all', async (event, path) => {\n        if (!isRestarting && event !== 'change') {\n          console.log('监听到文件增删改，重启服务中:', path)\n\n          isRestarting = true\n\n          await server.close()\n          await createServer()\n\n          isRestarting = false\n        }\n      })\n    }\n\n    await createServer()\n  })\n\ncli\n  .command('build')\n  .description('build')\n  .action(async () => {\n    try {\n      const siteConfig = await resolveSiteConfig({\n        mode: 'production',\n        command: 'build',\n      })\n\n      await buildRuntime({ siteConfig })\n\n      console.log('构建成功')\n    } catch (e) {\n      console.log(e)\n    }\n  })\n\ncli.parse()\n","import { UserConfig } from '@/shared/types'\nimport path from 'path'\n\n/**\n * 以产物lib文件夹内入口cli.js为基准\n */\nexport const ROOT_PATH = path.join(__dirname, '..', '..')\n\nexport const SRC_PATH = path.join(ROOT_PATH, './src')\n\nexport const RUNTIME_PATH = path.join(SRC_PATH, './runtime')\n\nexport const CLIENT_ENTRY_PATH = path.join(\n  RUNTIME_PATH,\n  './client/client-entry.tsx',\n)\n\nexport const SERVER_ENTRY_PATH = path.join(\n  RUNTIME_PATH,\n  './server/server-entry.tsx',\n)\n\nexport const SERVER_OUT_PATH = path.join(ROOT_PATH, './.zeropress')\n\nexport const CLIENT_OUT_PATH = './dist'\n\nexport const CIIENT_PUBLIC_PATH = './public'\n\nexport const HTML_PATH = path.join(ROOT_PATH, './index.html')\n\nexport const CONFIG_OPTIONS = ['zeropress.config.ts', 'zeropress.config.js']\n\nexport const DEFAULT_USER_CONFIG: Required<UserConfig> = {\n  docs: 'docs',\n  title: 'ZEROPRESS',\n  description: 'SSG Framework',\n  themeConfig: {\n    nav: [{ text: 'ZEROPRESS', link: '/', position: 'left' }],\n    autoNav: true,\n    autoSidebar: true,\n  },\n  icp: '',\n  vite: {},\n}\n\nexport const LIB_PATH = path.join(__dirname, '..')\n\nexport const LIB_RUNTIME_PATH = path.join(LIB_PATH, 'runtime')\n\nexport const LAZY_WITH_PRELOAD_RUNTIME_PATH = path.join(\n  LIB_RUNTIME_PATH,\n  './lazyWithPreload.js',\n)\n","// 之前尝试使用rehype插件处理imgsrc发现无法获取md路径\n// 使用插件transform移动图片到public并修改src的方式可以支持\n// dev时使用内存保存图片，通过server返回，更合适\nimport { CLIENT_OUT_PATH } from '../constants'\nimport { SiteConfig } from '@/shared/types'\nimport fse from 'fs-extra'\nimport path from 'path'\nimport { Plugin } from 'vite'\n\n// code内部代码例子\n// 通过img函数处理img\n// const _components = {\n//   a: \"a\",\n//   code: \"code\",\n//   h1: \"h1\",\n//   img: \"img\",\n//   li: \"li\",\n//   ol: \"ol\",\n//   p: \"p\",\n//   span: \"span\",\n//   ul: \"ul\",\n//   ...props.components\n// };\n// 调用使用jsxapi\n// _jsxDEV(\n//   _components.img,\n//   {\n//     src: '/img/note/5/z-6-3.jpg',\n//     alt: 'z-6-3',\n//   },\n//   undefined,\n//   false,\n//   {\n//     fileName:\n//       '/Users/houhongxu/workspace/hhx/zeropress/apps/examples/docs/测试超级超级超级超级长的头部/5webpack/6esm to cjs.md',\n//     lineNumber: 17,\n//     columnNumber: 4,\n//   },\n//   this,\n// )\n// 所以通过匹配_components.img即可定位src\n\ninterface vitePluginBuildImgOptions {\n  siteConfig: SiteConfig\n}\n\nconst isMdx = (file: string) => /\\.mdx?/.test(file)\n\nexport function vitePluginBuildImg({\n  siteConfig,\n}: vitePluginBuildImgOptions): Plugin {\n  return {\n    name: 'vitePluginBuildImg',\n    apply: 'build',\n    transform(code, id) {\n      let newCode = code\n\n      // 含有img的md和mdx文件\n      if (isMdx(id) && code.includes('_components.img')) {\n        const dirname = path.dirname(id)\n\n        // 相对public根路径的文件夹绝对路径\n        const [, publicDirname] = dirname.split('docs')\n\n        // 正则查找所有src路径\n        const imageRegex = /_components\\.img[^}]*?\\bsrc:\\s*[\"']([^\"']+)[\"']/g\n\n        const srcs = Array.from(code.matchAll(imageRegex), (match) => match[1])\n\n        srcs.forEach(async (src) => {\n          const decodeSrc = decodeURI(src)\n\n          if (src.startsWith('./')) {\n            // 相对路径使用publicDirname补全为绝对路径\n            const newSrc = path.join(encodeURI(publicDirname), src)\n\n            newCode = newCode.replace(src, newSrc)\n\n            // 移动图片到dist public对应路径\n            const oldPath = path.join(dirname, decodeSrc)\n\n            const newPath = path.join(\n              siteConfig.root,\n              CLIENT_OUT_PATH,\n              publicDirname,\n              decodeSrc,\n            )\n\n            const isOldExits = await fse.exists(oldPath)\n\n            const isNewExits = await fse.exists(newPath)\n\n            if (isOldExits && !isNewExits) {\n              await fse.ensureDir(path.dirname(newPath))\n\n              await fse.copyFile(oldPath, newPath)\n            }\n          }\n        })\n      }\n\n      return newCode\n    },\n  }\n}\n","import { PageData } from '@/shared/types'\nimport { parse } from 'acorn'\nimport { Program } from 'estree'\nimport Slugger from 'github-slugger'\nimport { Root } from 'mdast'\nimport { MdxjsEsm } from 'mdast-util-mdxjs-esm'\nimport { Plugin } from 'unified'\nimport { visit } from 'unist-util-visit'\n\n//  mdxjsEsm 注册在 mdast\ndeclare module 'mdast' {\n  interface RootContentMap {\n    mdxjsEsm: MdxjsEsm\n  }\n}\n\n// node.children 是一个数组，包含几种情况:\n// 1. 文本节点，如 '## title'\n// 结构如下:\n// {\n//   type: 'text',\n//   value: 'title'\n// }\n// 2. 链接节点，如 '## [title](/path)'\n// 结构如下:\n// {\n//   type: 'link',\n//   children: [{\n//     type: 'text',\n//     value: 'title'\n//   }]\n// }\n// 3. 内联代码节点，如 '## `title`'\n// 结构如下:\n// {\n//   type: 'inlineCode',\n//   value: 'title'\n// }\n\ninterface ChildNode {\n  type: 'link' | 'text' | 'inlineCode'\n  value: string\n  children?: ChildNode[]\n}\n\n// 导出mdx toc 对象，并使用slug id对应rehypeSlug\nexport const remarkMdxToc: Plugin<[], Root> = () => {\n  return (tree) => {\n    const toc: PageData['toc'] = []\n\n    // 遍历mdast tree的heading节点\n    visit(tree, 'heading', (node) => {\n      // h2 - h6\n      if (node.depth > 1 && node.depth < 8) {\n        const children = node.children as ChildNode[]\n\n        const headText = children\n          .map((child) => {\n            switch (child.type) {\n              case 'link':\n                return (\n                  child.children?.map((child) => child.value).join('') || ''\n                )\n              default:\n                return child.value\n            }\n          })\n          .join('')\n\n        // 每次生成新实例，避免单一实例生成多次id产生后缀-1,-2等\n        const slugger = new Slugger()\n        const id = slugger.slug(headText)\n\n        toc.push({\n          id,\n          text: headText,\n          depth: node.depth,\n        })\n      }\n    })\n\n    // GetToc为了符合react-refresh规则\n    const template = `export const GetToc = () => ${JSON.stringify(toc, null, 2)};`\n\n    // acorn解析template为esast节点，acorn类型版本和官方版本没对上，所以需要用estree官方类型 https://github.com/acornjs/acorn/tree/master/acorn/#interface\n    const estree = parse(template, {\n      ecmaVersion: 'latest',\n      sourceType: 'module',\n    }) as Program\n\n    // 组成mdast节点 https://github.com/syntax-tree/mdast-util-mdxjs-esm#syntax-tree\n    const mdastNode: MdxjsEsm = {\n      type: 'mdxjsEsm',\n      value: '',\n      data: {\n        estree,\n      },\n    }\n\n    // 放入mdast tree\n    tree.children.unshift(mdastNode)\n  }\n}\n","import { remarkMdxToc } from './remarkMdxToc'\nimport rollupPluginMdx from '@mdx-js/rollup'\nimport { ElementContent } from 'hast'\nimport rehypeAutolinkHeadings, {\n  Options as RehypeAutolinkHeadingsOptions,\n} from 'rehype-autolink-headings'\nimport rehypePrettyCode, {\n  Options as RehypePrettyCodeOptions,\n} from 'rehype-pretty-code'\nimport rehypeSlug from 'rehype-slug'\nimport remarkFrontmatter from 'remark-frontmatter'\nimport remarkGfm from 'remark-gfm'\nimport remarkMdxFrontmatter from 'remark-mdx-frontmatter'\nimport { Plugin } from 'vite'\n\n/**\n * 支持mdx的Gfm、Frontmatter、Toc等功能\n */\nexport function vitePluginMdx(): Plugin {\n  const isMdx = (file: string) => /\\.mdx?/.test(file)\n\n  return {\n    enforce: 'pre',\n\n    // 将热更新边界拓展到接受该事件并处理的组件，提供hmr自定义事件给client\n    async handleHotUpdate(ctx) {\n      // https://cn.vitejs.dev/guide/api-plugin.html#handlehotupdate\n      if (isMdx(ctx.file)) {\n        console.log('自定义hmr事件:', ctx.file)\n\n        ctx.server.ws.send({\n          type: 'custom',\n          event: 'mdx?-update',\n        })\n      }\n    },\n    ...rollupPluginMdx({\n      remarkPlugins: [\n        remarkGfm, // github的md语法\n        remarkFrontmatter, // md模块导出frontmatter变量，改变name配置需要提供type和marker配置https://github.com/remarkjs/remark-frontmatter?tab=readme-ov-file#example-different-markers-and-fences\n        remarkMdxFrontmatter, // mdx模块导出frontmatter变量\n        remarkMdxToc,\n      ],\n      rehypePlugins: [\n        rehypeSlug, // 自动添加h1-h6的id\n        [\n          rehypeAutolinkHeadings, // 自动添加h1-h6的<a><a/>锚点，href是id\n          {\n            // 用hast定义锚点内容元素 https://github.com/syntax-tree/hast#nodes\n            properties: {\n              class: 'autolink-headings',\n            },\n            content: {\n              type: 'element',\n              tagName: 'span',\n              properties: {\n                style: 'margin-right: 4px;',\n              },\n              children: [{ type: 'text', value: '#' }],\n            } as ElementContent,\n          } as RehypeAutolinkHeadingsOptions,\n        ],\n        [\n          rehypePrettyCode,\n          {\n            theme: 'github-light',\n          } as RehypePrettyCodeOptions,\n        ],\n      ],\n    }),\n  }\n}\n","import fse from 'fs-extra'\nimport { Plugin } from 'vite'\n\ninterface VitePluginServeHtmlOptions {\n  templatePath: string\n  entry: string\n}\n\nexport function vitePluginServeHtml({\n  templatePath,\n  entry,\n}: VitePluginServeHtmlOptions): Plugin {\n  return {\n    name: 'vitePluginServeHtml',\n    apply: 'serve',\n    // https://cn.vitejs.dev/guide/api-plugin.html#configureserver\n    configureServer(server) {\n      return () => {\n        //  内部中间件 之后 运行return\n\n        server.middlewares.use(async (req, res, next) => {\n          // 不是html则跳过\n          if (!req.url?.endsWith('.html') && req.url !== '/') {\n            return next()\n          }\n\n          const template = await fse.readFile(templatePath, 'utf-8')\n\n          // 使用vite转换html来获取vite的支持\n          const viteHtml = await server.transformIndexHtml?.(\n            req.url,\n            template,\n            req.originalUrl,\n          )\n\n          // 添加客户端js入口\n          const html = viteHtml.replace(\n            '</body>',\n            `\n              <script type=\"module\" src=\"${entry}\"></script>\n              \\n\n              </body>\n              `,\n          )\n\n          res.statusCode = 200\n\n          res.setHeader('Content-Type', 'text/html')\n\n          res.end(html)\n\n          return\n        })\n      }\n    },\n  }\n}\n","// 之前尝试使用rehype插件处理imgsrc发现无法获取md路径\n// 使用插件transform移动图片到public并修改src的方式可以支持\n// dev时使用内存保存图片，通过server返回，更合适\nimport { CIIENT_PUBLIC_PATH } from '../constants'\nimport { SiteConfig } from '@/shared/types'\nimport fse from 'fs-extra'\nimport mime from 'mime'\nimport path from 'path'\nimport { Plugin } from 'vite'\n\ninterface vitePluginServeImgOptions {\n  siteConfig: SiteConfig\n}\n\nconst isImg = (filename?: string): filename is string => {\n  if (!filename) return false\n\n  return /\\.(jpg|jpeg|png|gif|svg|webp)$/i.test(filename)\n}\n\nexport function vitePluginServeImg({\n  siteConfig,\n}: vitePluginServeImgOptions): Plugin {\n  return {\n    name: 'vite-plugin-fixed-image-dev',\n    apply: 'serve',\n    configureServer(server) {\n      server.middlewares.use(async (req, res, next) => {\n        if (isImg(req.url)) {\n          const decodeSrc = decodeURI(req.url)\n\n          const isExits = await fse.exists(\n            path.join(siteConfig.root, CIIENT_PUBLIC_PATH, decodeSrc),\n          )\n\n          if (!isExits) {\n            // 指定要返回的固定图片路径\n            const imgPath = path.join(\n              siteConfig.root,\n              siteConfig.userConfig.docs,\n              decodeSrc,\n            )\n\n            const imgType = mime.getType(imgPath)\n\n            if (imgType) {\n              res.setHeader('Content-Type', imgType)\n            }\n\n            fse.createReadStream(imgPath).pipe(res)\n\n            return\n          }\n        }\n\n        return next()\n      })\n    },\n  }\n}\n","import { Plugin } from 'vite'\n\n/**\n * 将frontmatter转换为满足react-refresh规则\n */\nexport function vitePluginTransformFrontmatter(): Plugin {\n  const isMdx = (file: string) => /\\.mdx?/.test(file)\n\n  return {\n    name: 'vitePluginTransformFrontmatter',\n    enforce: 'post',\n    transform(code, id) {\n      if (isMdx(id)) {\n        code = code.replace('export const frontmatter', 'const frontmatter')\n\n        code += `\\n export const GetFrontMatter = () => frontmatter`\n\n        return { code }\n      }\n    },\n  }\n}\n","import { SiteConfig } from '@/shared/types'\nimport path from 'path'\nimport { Plugin } from 'vite'\n\ninterface vitePluginVirtualConfigOptions {\n  siteConfig: SiteConfig\n  restartRuntimeDevServer?: () => Promise<void>\n}\n\n// 虚拟模块将node层读取的config数据传递给client层\nexport function vitePluginVirtualConfig({\n  siteConfig,\n  restartRuntimeDevServer,\n}: vitePluginVirtualConfigOptions): Plugin {\n  const virtualModuleId = 'virtual:config'\n  const resolvedVirtualModuleId = '\\0' + virtualModuleId\n\n  return {\n    name: 'vitePluginVirtualConfig',\n    resolveId(id) {\n      if (id === virtualModuleId) {\n        // 解析为rollup虚拟模块，避免其他插件load这个id\n        return resolvedVirtualModuleId\n      }\n    },\n    load(id) {\n      if (id === resolvedVirtualModuleId) {\n        return `export default ${JSON.stringify(siteConfig.userConfig)}`\n      }\n    },\n    async handleHotUpdate(ctx) {\n      const configFileName = siteConfig.userConfigPath\n        ? path.basename(siteConfig.userConfigPath)\n        : undefined\n\n      if (configFileName && ctx.file.includes(configFileName)) {\n        if (restartRuntimeDevServer) {\n          console.log('监听到配置文件更新，重启服务中:', ctx.file)\n\n          await restartRuntimeDevServer()\n        }\n      }\n    },\n  }\n}\n","import { DEFAULT_USER_CONFIG } from './constants'\nimport { spawn } from 'cross-spawn'\nimport dayjs from 'dayjs'\nimport fg, { Options } from 'fast-glob'\nimport fse from 'fs-extra'\nimport path from 'path'\n\nexport async function globDocs(\n  path = DEFAULT_USER_CONFIG.docs,\n  options?: Options | undefined,\n) {\n  return await fg.glob('**/*.{jsx,tsx,md,mdx}', {\n    ignore: ['node_modules/**', 'client/**', 'server/**'],\n    cwd: path,\n    deep: 3,\n    ...options,\n  })\n}\n\nconst cache = new Map<string, number>()\n\nexport function getGitTimestamp(file: string) {\n  const cached = cache.get(file)\n\n  if (cached) return cached\n\n  if (!fse.existsSync(file)) return 0\n\n  return new Promise<number | undefined>((resolve, reject) => {\n    const child = spawn(\n      'git',\n      ['log', '-1', '--pretty=\"%ai\"', path.basename(file)],\n      { cwd: path.dirname(file) },\n    )\n\n    let output = ''\n\n    child.stdout.on('data', (d) => (output += String(d)))\n\n    child.on('close', () => {\n      if (output) {\n        const timestamp = dayjs(output).unix()\n\n        cache.set(file, timestamp)\n\n        resolve(timestamp)\n      } else {\n        resolve(undefined)\n      }\n    })\n\n    child.on('error', reject)\n  })\n}\n\nexport async function promiseLimit<T, R>(\n  arr: T[],\n  limit: number,\n  asyncFn: (item: T) => Promise<R>,\n): Promise<R[]> {\n  const ret: R[] = new Array(arr.length)\n  const executing: Promise<void>[] = []\n\n  for (let i = 0; i < arr.length; i++) {\n    const item = arr[i]\n    const p = (async () => {\n      const res = await asyncFn(item)\n\n      ret[i] = res\n    })()\n\n    executing.push(p)\n\n    if (executing.length >= limit) {\n      await Promise.race(executing)\n    }\n  }\n\n  await Promise.all(executing)\n\n  return ret\n}\n","export function isBrowser() {\n  return (\n    typeof window !== 'undefined' &&\n    !!window.document &&\n    !!window.document.createElement\n  )\n}\n\n/**\n * utf8转码url\n * @description 兼容中文url\n */\nexport function normalizeUrl(url = '/') {\n  return encodeURI(url)\n}\n\n/**\n * url添加html后缀\n * @description 兼容服务器ssg，访问index.html之外的html需要后缀\n */\nexport function urlWithHtml(url: string) {\n  return url ? url + '.html' : url\n}\n\nexport function groupBy<T>(arr: T[], key: keyof T) {\n  return arr.reduce<Record<string, T[]>>((pre, cur) => {\n    const valueAsKey = cur[key] as string | number\n\n    if (!pre[valueAsKey]) {\n      pre[valueAsKey] = []\n    }\n\n    pre[valueAsKey].push(cur)\n\n    return pre\n  }, {})\n}\n\nexport function keyBy<T>(arr: T[], key: keyof T) {\n  return arr.reduce<Record<string, T>>((pre, cur) => {\n    const valueAsKey = cur[key] as string | number\n\n    pre[valueAsKey] = cur\n\n    return pre\n  }, {})\n}\n\n/**\n * 分离数字和文本\n */\nexport function splitIndex(text?: string) {\n  const matched = text?.match(/^(\\d+)(\\.?\\s*)(.*)$/)\n  const index = matched?.[1]\n\n  if (index) {\n    return {\n      index: parseInt(index),\n      text: matched?.[3] ?? '',\n    }\n  } else {\n    return {\n      index: 0,\n      text: text ?? '',\n    }\n  }\n}\n","import { LAZY_WITH_PRELOAD_RUNTIME_PATH } from '../constants'\nimport { getGitTimestamp, globDocs } from '../utils'\nimport { SiteConfig } from '@/shared/types'\nimport { normalizeUrl, urlWithHtml } from '@/shared/utils'\nimport fs from 'fs'\nimport path from 'path'\nimport { Plugin } from 'vite'\n\ninterface vitePluginVirtualRoutesOptions {\n  siteConfig: SiteConfig\n  isServer?: boolean\n}\n\nconst lazyWithPreloadRuntimeCode = fs.readFileSync(\n  LAZY_WITH_PRELOAD_RUNTIME_PATH,\n  'utf-8',\n)\n\n// 虚拟模块将node端读取的routes数据传递给client端，不需要生成入口文件来处理client端路由了\nexport function vitePluginVirtualRoutes({\n  siteConfig,\n  isServer,\n}: vitePluginVirtualRoutesOptions): Plugin {\n  const virtualModuleId = 'virtual:routes'\n  const resolvedVirtualModuleId = '\\0' + virtualModuleId\n  const docs = siteConfig.userConfig.docs\n\n  return {\n    name: 'vitePluginVirtualRoutes',\n    resolveId(id) {\n      if (id === virtualModuleId) {\n        // 解析为rollup虚拟模块，避免其他插件load这个id\n        return resolvedVirtualModuleId\n      }\n    },\n    async load(id) {\n      if (id === resolvedVirtualModuleId) {\n        // glob文件\n        const files = await globDocs(docs, { absolute: true })\n\n        let importTemplate = 'import React from \"react\";\\n'\n\n        // 根据文件获取路由\n        const routes = await Promise.all(\n          files.map(async (file, index) => {\n            const relativePath = path.relative(docs, file)\n\n            const pathname = relativePath\n              .replace(path.extname(file), '')\n              .replace(/index$/, '')\n\n            importTemplate += isServer\n              ? `import Element${index + 1} from '${file}';\\n`\n              : `const Element${index + 1} = lazyWithPreload(()=> import('${file}'));\\n`\n\n            const timestamp = await getGitTimestamp(file)\n\n            return `{\n            file:'${file}', \n            timestamp:'${timestamp ?? ''}', \n            path: '/${normalizeUrl(urlWithHtml(pathname))}', \n            element: React.createElement(Element${index + 1}), \n            preload: ${isServer ? `()=>Element${index + 1}` : `()=> Element${index + 1}.preload()`}\n            },\\n`\n          }),\n        )\n\n        return `\n        ${lazyWithPreloadRuntimeCode.toString()}\n        ${importTemplate}\n        export default [${routes.join('')}]\n        `\n      }\n    },\n  }\n}\n","import { CLIENT_ENTRY_PATH, HTML_PATH } from '../constants'\nimport { vitePluginBuildImg } from './vitePluginBuildImg'\nimport { vitePluginMdx } from './vitePluginMdx'\nimport { vitePluginServeHtml } from './vitePluginServeHtml'\nimport { vitePluginServeImg } from './vitePluginServeImg'\nimport { vitePluginTransformFrontmatter } from './vitePluginTransformFrontmatter'\nimport { vitePluginVirtualConfig } from './vitePluginVirtualConfig'\nimport { vitePluginVirtualRoutes } from './vitePluginVirtualRoutes'\nimport { SiteConfig } from '@/shared/types'\nimport pluginReact from '@vitejs/plugin-react'\nimport { PluginOption } from 'vite'\n\nexport function createPlugins({\n  siteConfig,\n  restartRuntimeDevServer,\n  isServer,\n}: {\n  siteConfig: SiteConfig\n  restartRuntimeDevServer?: () => Promise<void>\n  isServer?: boolean\n}): PluginOption[] {\n  return [\n    vitePluginMdx(),\n    // vite 中提到的，“为了更轻松地将简单常量与组件一起导出，模块仅在其值发生变化时才会失效”，所以mdx导出的复杂变量toc或者frontmatter会导致react-refresh失效，具体原因是react-refresh避免复杂变量的副作用 https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md#consistent-components-exports\n    // webpack 也提到了 https://github.com/pmmmwh/react-refresh-webpack-plugin/issues/249#issuecomment-729277683\n    // react-refresh issue中可得知 生效需要首字母大写+函数变量 dan的指南https://github.com/facebook/react/issues/16604\n    pluginReact({ include: /\\.(md|mdx|js|jsx|ts|tsx)$/ }), // mdx接入@vitejs/plugin-react https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md#includeexclude\n    vitePluginServeHtml({\n      templatePath: HTML_PATH,\n      entry: CLIENT_ENTRY_PATH, // /@fs/是针对root之外的，当作为npm包时在nodemodules中属于root内，不需要使用 https://cn.vitejs.dev/config/server-options.html#server-fs-allow\n    }),\n    vitePluginVirtualConfig({ siteConfig, restartRuntimeDevServer }),\n    vitePluginVirtualRoutes({ siteConfig, isServer }),\n    vitePluginTransformFrontmatter(),\n    vitePluginBuildImg({ siteConfig }),\n    vitePluginServeImg({ siteConfig }),\n  ]\n}\n","import { addDynamicIconSelectors } from '@iconify/tailwind'\nimport path from 'path'\nimport { Config } from 'tailwindcss'\n\nexport const tailwindcssConfig: Config = {\n  content: [\n    path.join(\n      __dirname,\n      '..',\n      '..',\n      './src/default-theme/**/*.{tsx,ts,jsx,js}',\n    ), // 相对于lib的路径，tailwind引入是在node/config,打包后是lib/node/cli\n  ],\n  darkMode: 'selector',\n  theme: {\n    extend: {\n      screens: {\n        pc: '768px',\n        full: '1060px',\n      },\n\n      /** 声明时dark在下面所以默认显示dark主题颜色 */\n      colors: {\n        divider: 'var(--ep-color-divider)',\n\n        brand: 'var(--ep-color-brand)',\n\n        bg: {\n          default: 'var(--ep-color-bg-default)',\n          switch: 'var(--ep-color-bg-switch)',\n          inverse: 'var(--ep-color-bg-inverse)',\n          sidebar: 'var(--ep-color-bg-sidebar)',\n        },\n\n        text: {\n          1: 'var(--ep-color-text-1)',\n          2: 'var(--ep-color-text-2)',\n          3: 'var(--ep-color-text-3)',\n          4: 'var(--ep-color-text-4)',\n        },\n\n        gray: {\n          1: 'var(--ep-color-gray-1)',\n        },\n      },\n      boxShadow: {\n        1: '0 1px 2px rgba(0, 0, 0, 0.04), 0 1px 2px rgba(0, 0, 0, 0.06)',\n        2: '0 3px 12px rgba(0, 0, 0, 0.07), 0 1px 4px rgba(0, 0, 0, 0.07)',\n        3: '0 12px 32px rgba(0, 0, 0, 0.1), 0 2px 6px rgba(0, 0, 0, 0.08)',\n        4: '0 14px 44px rgba(0, 0, 0, 0.12), 0 3px 9px rgba(0, 0, 0, 0.12)',\n        5: '0 18px 56px rgba(0, 0, 0, 0.16), 0 4px 12px rgba(0, 0, 0, 0.16)',\n      },\n      spacing: { nav: '56px', sidebar: '250px', toc: '200px' },\n    },\n  },\n  plugins: [addDynamicIconSelectors()],\n}\n","import {\n  CLIENT_ENTRY_PATH,\n  CLIENT_OUT_PATH,\n  HTML_PATH,\n  CIIENT_PUBLIC_PATH,\n  ROOT_PATH,\n  SERVER_ENTRY_PATH,\n  SERVER_OUT_PATH,\n  SRC_PATH,\n} from './constants'\nimport { createPlugins } from './plugins'\nimport { tailwindcssConfig } from './tailwind'\nimport { promiseLimit } from './utils'\nimport { SiteConfig } from '@/shared/types'\nimport autoprefixer from 'autoprefixer'\nimport fse from 'fs-extra'\nimport path from 'path'\nimport { HelmetData } from 'react-helmet-async'\nimport { RouteObject } from 'react-router-dom'\nimport { RollupOutput } from 'rollup'\nimport tailwindcss from 'tailwindcss'\nimport { build } from 'vite'\n\nexport async function buildRuntime({ siteConfig }: { siteConfig: SiteConfig }) {\n  // 删除旧产物\n  console.log('删除旧产物：', CLIENT_OUT_PATH)\n\n  await fse.remove(CLIENT_OUT_PATH)\n\n  // 分为运行时的client构建水合的js与server构建渲染html的js\n  console.log('构建js文件...')\n\n  const [clientBundle, serverBundle] = await promiseLimit(\n    [{ siteConfig }, { siteConfig, isServer: true }],\n    10,\n    viteBuild,\n  )\n\n  // 渲染html\n  console.log('构建html文件...')\n\n  await renderHtmls({ siteConfig, clientBundle, serverBundle })\n}\n\n/**\n * vite构建\n */\nfunction viteBuild({\n  isServer = false,\n  siteConfig,\n}: {\n  isServer?: boolean\n  siteConfig: SiteConfig\n}) {\n  return build({\n    mode: 'production',\n    base: './',\n    root: ROOT_PATH, // 获取tsconfig.json等配置文件\n    plugins: createPlugins({ siteConfig, isServer }),\n    build: {\n      ssr: isServer,\n      outDir: isServer\n        ? SERVER_OUT_PATH\n        : path.join(siteConfig.root, CLIENT_OUT_PATH),\n      rollupOptions: {\n        input: isServer ? SERVER_ENTRY_PATH : CLIENT_ENTRY_PATH,\n        output: {\n          entryFileNames: isServer\n            ? 'server-entry.cjs'\n            : 'client-entry.[hash].js',\n          format: isServer ? 'cjs' : 'es',\n        },\n      },\n    },\n    // 配置tailwindcss\n    css: {\n      postcss: { plugins: [tailwindcss(tailwindcssConfig), autoprefixer({})] },\n    },\n    resolve: {\n      alias: {\n        '@': SRC_PATH,\n      },\n    },\n  }) as Promise<RollupOutput>\n}\n\n/**\n * 渲染多路由的html并写入client文件夹\n * @description 写入client文件夹就是ssg和ssr区别，ssr是渲染后将html在服务器接口中返回\n */\nasync function renderHtmls({\n  clientBundle,\n  serverBundle,\n  siteConfig,\n}: {\n  clientBundle: RollupOutput\n  serverBundle: RollupOutput\n  siteConfig: SiteConfig\n}) {\n  // 获取客户端和服务端入口chunk\n  const clientEntryChunk = clientBundle.output.find(\n    (chunk) => chunk.type === 'chunk' && chunk.isEntry,\n  )\n\n  const serverEntryChunk = serverBundle.output.find(\n    (chunk) => chunk.type === 'chunk' && chunk.isEntry,\n  )\n\n  if (!clientEntryChunk || !serverEntryChunk) {\n    throw new Error('构建产物为空')\n  }\n\n  // 获取样式资源\n  const styleAssets = clientBundle.output.filter(\n    (chunk) => chunk.type === 'asset' && chunk.fileName.endsWith('.css'),\n  )\n\n  // 静态资源拷贝到打包路径\n  if (await fse.exists(CIIENT_PUBLIC_PATH)) {\n    await fse.copy(CIIENT_PUBLIC_PATH, path.join(CLIENT_OUT_PATH))\n  }\n\n  const serverEntryPath = path.join(SERVER_OUT_PATH, serverEntryChunk?.fileName)\n\n  // 部署后服务路径是CLIENT_OUT_PATH文件夹所以相对路径就可以了\n  const clientEntryPath = `/${clientEntryChunk?.fileName}`\n\n  // 标题上下文\n  const helmetContext = {} as HelmetData['context']\n\n  const { render, routes } = (await import(serverEntryPath)) as {\n    render: (\n      location: string,\n      helmetContext: HelmetData['context'],\n    ) => Promise<string>\n    routes: RouteObject[]\n  }\n\n  // 获取标题\n  const { helmet } = helmetContext\n\n  const template = await fse.readFile(HTML_PATH, 'utf-8')\n\n  // mpa路由，每个路由都渲染为html\n  await promiseLimit(routes, 10, async (route) => {\n    const file = route.path === '/' ? '/index.html' : route.path\n\n    const relativeFilePath = `${CLIENT_OUT_PATH}${file}`\n\n    const helmetContext = {} as HelmetData['context']\n\n    const rendered = await render(route.path || '/', helmetContext)\n\n    const html = template\n      .replace('<title>ZEROPRESS</title>', helmet?.title?.toString() || '')\n      .replace('<!--app-html-->', rendered)\n      .replace(\n        '</body>',\n        `\n    <script type=\"module\" src=\"${clientEntryPath}\"></script>\n    </body>\n    `,\n      )\n      .replace(\n        '</head>',\n        styleAssets\n          .map((asset) => `<link rel=\"stylesheet\" href=\"/${asset.fileName}\">`)\n          .join('\\n'),\n      )\n\n    fse\n      .ensureDir(path.join(siteConfig.root, path.dirname(relativeFilePath)))\n      .catch((e) => console.log('client文件夹不存在：', e))\n      .then(() =>\n        fse.writeFile(path.join(siteConfig.root, relativeFilePath), html),\n      )\n      .catch((e) => console.log('html写入失败', e))\n  })\n}\n","import { CONFIG_OPTIONS, DEFAULT_USER_CONFIG } from './constants'\nimport { globDocs } from './utils'\nimport {\n  UserConfig,\n  SiteConfig,\n  Sidebar,\n  NavItem,\n  SidebarDir,\n  SidebarItem,\n} from '@/shared/types'\nimport {\n  groupBy,\n  keyBy,\n  normalizeUrl,\n  splitIndex,\n  urlWithHtml,\n} from '@/shared/utils'\nimport fse from 'fs-extra'\nimport path from 'path'\nimport { loadConfigFromFile } from 'vite'\n\n/**\n * 读取并处理配置文件\n * @description root一般不填，默认为执行命令的根目录\n */\nexport async function resolveSiteConfig({\n  root = process.cwd(),\n  command,\n  mode,\n}: {\n  root?: string\n  command: 'build' | 'serve'\n  mode: 'development' | 'production'\n}) {\n  const { userConfigPath, userConfig = {} } = await resolveUserConfig({\n    root,\n    mode,\n    command,\n  })\n\n  const docs = userConfig.docs ?? DEFAULT_USER_CONFIG.docs\n\n  const auto = await autoSidebarAndNav({ docs })\n\n  const navLeftIndex =\n    userConfig.themeConfig?.nav?.findIndex(\n      (item) => item.position === 'left',\n    ) ?? 0\n\n  const nav =\n    userConfig.themeConfig?.autoNav === false\n      ? userConfig.themeConfig.nav ?? []\n      : [\n          ...(userConfig.themeConfig?.nav ?? []).slice(0, navLeftIndex),\n          ...auto.nav,\n          ...(userConfig.themeConfig?.nav ?? []).slice(navLeftIndex),\n        ]\n\n  const sidebar =\n    userConfig.themeConfig?.autoSidebar === false\n      ? userConfig.themeConfig.sidebar ?? {}\n      : auto.sidebar\n\n  const normalizedNav = nav.map((item) => ({\n    ...item,\n    link: normalizeUrl(item.link),\n  }))\n\n  const normalizedSidebar = Object.entries(sidebar).reduce<Sidebar>(\n    (pre, [key, value]) => {\n      pre[normalizeUrl(key)] = value.map((item) => ({\n        ...item,\n        link: normalizeUrl(item.link),\n        items: item.items?.map((i) => ({ ...i, link: normalizeUrl(i.link) })),\n      }))\n\n      return pre\n    },\n    {},\n  )\n\n  const requiredUserConfig: Required<UserConfig> = {\n    docs,\n    title: userConfig.title ?? DEFAULT_USER_CONFIG.title,\n    description: userConfig.description ?? DEFAULT_USER_CONFIG.description,\n    icp: userConfig.icp ?? DEFAULT_USER_CONFIG.icp,\n    themeConfig: userConfig.themeConfig\n      ? {\n          ...userConfig.themeConfig,\n          nav: normalizedNav,\n          sidebar: normalizedSidebar,\n          autoNav: true,\n          autoSidebar: true,\n        }\n      : {\n          ...DEFAULT_USER_CONFIG.themeConfig,\n          nav: normalizedNav,\n          sidebar: normalizedSidebar,\n          autoNav: true,\n          autoSidebar: true,\n        },\n    vite: userConfig.vite ?? DEFAULT_USER_CONFIG.vite,\n  }\n\n  const siteConfig: SiteConfig = {\n    root,\n    userConfigPath,\n    userConfig: requiredUserConfig,\n  }\n\n  return siteConfig\n}\n\n/**\n * 自动生成sidebar和nav\n */\nasync function autoSidebarAndNav({ docs }: { docs?: string }) {\n  // glob文件\n  const files = (await globDocs(docs)).filter(\n    (item) => !item.includes('index.md'),\n  )\n\n  const data = files.map((item) => {\n    const nav = item.split('/')[0]\n    const dir = item.split('/')[1]\n    const file: string | undefined = item.split('/')[2]\n\n    const splitedNav = splitIndex(nav)\n    const splitedDir = splitIndex(dir)\n    const splitedFile = splitIndex(file)\n\n    return {\n      path: `/${urlWithHtml(item.replace(path.extname(item), ''))}`,\n      nav,\n      dir,\n      file,\n      navIndex: splitedNav.index,\n      navText: splitedNav.text,\n      navPath: `/${nav}`,\n      siderbarDirIndex: splitedDir.index,\n      siderbarDirText: splitedDir.text.replace(\n        path.extname(splitedDir.text),\n        '',\n      ),\n      fileIndex: splitedFile.index,\n      fileText: splitedFile.text.replace(path.extname(splitedFile.text), ''),\n    }\n  })\n\n  const nav = Object.entries(groupBy(data, 'navText'))\n    .map<NavItem & { index: number }>(([navText, value]) => ({\n      text: navText,\n      index: keyBy(value, 'navText')[navText].navIndex,\n      link: value.sort(\n        (a, b) =>\n          a.siderbarDirIndex - b.siderbarDirIndex + a.fileIndex - b.fileIndex,\n      )[0].path,\n    }))\n    .sort((a, b) => a.index - b.index)\n\n  const sidebar = Object.entries(groupBy(data, 'navPath')).reduce<\n    Record<string, SidebarDir[]>\n  >((pre, [navPath, value]) => {\n    const sidebarItemsMap = Object.entries(\n      groupBy(value, 'siderbarDirText'),\n    ).reduce<Record<string, SidebarItem[]>>((pre, [siderbarDirText, value]) => {\n      pre[siderbarDirText] = value\n        .sort((a, b) => a.fileIndex - b.fileIndex)\n        .map((item) => ({\n          text: item.fileText,\n          link: item.path,\n        }))\n        .filter((item) => item.text) // file可能不存在\n\n      return pre\n    }, {})\n\n    pre[navPath] = Object.values(\n      // keyBy可以根据text字段去重，因为text相同的items也是相同的，所以不会丢失值\n      keyBy(\n        value\n          .sort((a, b) => a.siderbarDirIndex - b.siderbarDirIndex)\n          .map((item) => ({\n            text: item.siderbarDirText,\n            items: sidebarItemsMap[item.siderbarDirText],\n            link: item.path,\n          })),\n        'text',\n      ),\n    )\n\n    return pre\n  }, {})\n\n  return { nav, sidebar }\n}\n\n/**\n * 解析用户配置\n */\nasync function resolveUserConfig({\n  root = process.cwd(),\n  command,\n  mode,\n}: {\n  root?: string\n  command: 'build' | 'serve'\n  mode: 'development' | 'production'\n}) {\n  const userConfigPath = getUserConfigPath({ root })\n\n  // command和mode和配置中一样 https://cn.vitejs.dev/guide/api-javascript.html#loadconfigfromfile\n  const loadResult = await loadConfigFromFile(\n    { command, mode },\n    userConfigPath,\n    root,\n  )\n\n  return {\n    userConfigPath,\n    userConfig: loadResult?.config as UserConfig | undefined,\n  }\n}\n\nfunction getUserConfigPath({ root = process.cwd() }) {\n  const userConfigPath = CONFIG_OPTIONS.map((option) =>\n    path.join(root, option),\n  ).find((path) => fse.existsSync(path))\n\n  return userConfigPath\n}\n","import { SRC_PATH } from './constants'\nimport { createPlugins } from './plugins'\nimport { tailwindcssConfig } from './tailwind'\nimport { SiteConfig } from '@/shared/types'\nimport autoprefixer from 'autoprefixer'\nimport tailwindcss from 'tailwindcss'\nimport { createServer } from 'vite'\n\n// 因为是ssg所以dev使用传统的服务模式，如果是ssr dev也需要服务端返回html\nexport function createRuntimeDevServer({\n  siteConfig,\n  restartRuntimeDevServer,\n}: {\n  siteConfig: SiteConfig\n  restartRuntimeDevServer: () => Promise<void>\n}) {\n  return createServer({\n    root: siteConfig.root, // 避免dev服务访问路由时直接访问静态tsx资源，所以在/开启服务，路由一般在/docs内\n    server: {\n      host: true, // 开启局域网与公网ip\n    },\n    plugins: createPlugins({\n      restartRuntimeDevServer,\n      siteConfig,\n    }),\n    // 配置tailwindcss\n    css: {\n      postcss: { plugins: [tailwindcss(tailwindcssConfig), autoprefixer({})] },\n    },\n    resolve: {\n      alias: {\n        '@': SRC_PATH,\n      },\n    },\n    optimizeDeps: {\n      // 因为zeropress是esm包，所以内部的cjs包不会被vite主动预构建，需要标记需要预构建的依赖\n      include: [\n        'zeropress > react-fast-compare',\n        'zeropress > classnames',\n        'zeropress > invariant',\n        'zeropress > shallowequal',\n        'zeropress > dayjs',\n        'zeropress > react-dom/client',\n      ],\n\n      // 避免vite将别名和虚拟模块当成模块进行预构建\n      exclude: ['@/runtime', '@/node', '@/default-theme', '@/shared'],\n    },\n  })\n}\n"],"mappings":"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","names":["cli_exports","__export","cli","__toCommonJS","import_path","ROOT_PATH","path","SRC_PATH","RUNTIME_PATH","CLIENT_ENTRY_PATH","SERVER_ENTRY_PATH","SERVER_OUT_PATH","CLIENT_OUT_PATH","CIIENT_PUBLIC_PATH","HTML_PATH","CONFIG_OPTIONS","DEFAULT_USER_CONFIG","LIB_PATH","LIB_RUNTIME_PATH","LAZY_WITH_PRELOAD_RUNTIME_PATH","import_fs_extra","import_path","isMdx","file","vitePluginBuildImg","siteConfig","code","id","newCode","dirname","path","publicDirname","imageRegex","match","src","decodeSrc","newSrc","oldPath","newPath","CLIENT_OUT_PATH","isOldExits","fse","isNewExits","import_acorn","import_github_slugger","import_unist_util_visit","remarkMdxToc","tree","toc","node","headText","child","id","Slugger","template","mdastNode","import_rollup","import_rehype_autolink_headings","import_rehype_pretty_code","import_rehype_slug","import_remark_frontmatter","import_remark_gfm","import_remark_mdx_frontmatter","vitePluginMdx","isMdx","file","ctx","rollupPluginMdx","remarkGfm","remarkFrontmatter","remarkMdxFrontmatter","remarkMdxToc","rehypeSlug","rehypeAutolinkHeadings","rehypePrettyCode","import_fs_extra","vitePluginServeHtml","templatePath","entry","server","req","res","next","template","fse","html","import_fs_extra","import_mime","import_path","isImg","filename","vitePluginServeImg","siteConfig","server","req","res","next","decodeSrc","fse","path","CIIENT_PUBLIC_PATH","imgPath","imgType","mime","vitePluginTransformFrontmatter","isMdx","file","code","id","import_path","vitePluginVirtualConfig","siteConfig","restartRuntimeDevServer","virtualModuleId","resolvedVirtualModuleId","id","ctx","configFileName","path","import_cross_spawn","import_dayjs","import_fast_glob","import_fs_extra","import_path","globDocs","path","DEFAULT_USER_CONFIG","options","fg","cache","getGitTimestamp","file","cached","fse","resolve","reject","child","output","d","timestamp","dayjs","promiseLimit","arr","limit","asyncFn","ret","executing","item","res","normalizeUrl","url","urlWithHtml","groupBy","arr","key","pre","cur","valueAsKey","keyBy","splitIndex","text","matched","index","import_fs","import_path","lazyWithPreloadRuntimeCode","fs","LAZY_WITH_PRELOAD_RUNTIME_PATH","vitePluginVirtualRoutes","siteConfig","isServer","virtualModuleId","resolvedVirtualModuleId","docs","id","files","globDocs","importTemplate","routes","file","index","pathname","path","timestamp","getGitTimestamp","normalizeUrl","urlWithHtml","import_plugin_react","createPlugins","siteConfig","restartRuntimeDevServer","isServer","vitePluginMdx","pluginReact","vitePluginServeHtml","HTML_PATH","CLIENT_ENTRY_PATH","vitePluginVirtualConfig","vitePluginVirtualRoutes","vitePluginTransformFrontmatter","vitePluginBuildImg","vitePluginServeImg","import_tailwind","import_path","tailwindcssConfig","path","import_autoprefixer","import_fs_extra","import_path","import_tailwindcss","import_vite","buildRuntime","siteConfig","CLIENT_OUT_PATH","fse","clientBundle","serverBundle","promiseLimit","viteBuild","renderHtmls","isServer","ROOT_PATH","createPlugins","SERVER_OUT_PATH","path","SERVER_ENTRY_PATH","CLIENT_ENTRY_PATH","tailwindcss","tailwindcssConfig","autoprefixer","SRC_PATH","clientEntryChunk","chunk","serverEntryChunk","styleAssets","CIIENT_PUBLIC_PATH","serverEntryPath","clientEntryPath","helmetContext","render","routes","helmet","template","HTML_PATH","route","file","relativeFilePath","rendered","html","asset","e","import_fs_extra","import_path","import_vite","resolveSiteConfig","root","command","mode","userConfigPath","userConfig","resolveUserConfig","docs","DEFAULT_USER_CONFIG","auto","autoSidebarAndNav","navLeftIndex","item","nav","sidebar","normalizedNav","normalizeUrl","normalizedSidebar","pre","key","value","i","requiredUserConfig","data","globDocs","dir","file","splitedNav","splitIndex","splitedDir","splitedFile","urlWithHtml","path","groupBy","navText","keyBy","a","b","navPath","sidebarItemsMap","siderbarDirText","getUserConfigPath","loadResult","CONFIG_OPTIONS","option","fse","import_autoprefixer","import_tailwindcss","import_vite","createRuntimeDevServer","siteConfig","restartRuntimeDevServer","createPlugins","tailwindcss","tailwindcssConfig","autoprefixer","SRC_PATH","import_commander","import_fs_extra","import_path","cli","version","fse","path","ROOT_PATH","port","createServer","siteConfig","resolveSiteConfig","server","createRuntimeDevServer","isRestarting","event","buildRuntime"]}