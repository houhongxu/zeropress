{"version":3,"sources":["../src/index.ts","../src/shared/utils.ts","../src/runtime/client/Content.tsx","../src/runtime/usePageData.ts","../src/runtime/client/Link.tsx"],"sourcesContent":["export * from '@/shared/types'\nexport * from '@/runtime'\n","export function isBrowser() {\n  return (\n    typeof window !== 'undefined' &&\n    !!window.document &&\n    !!window.document.createElement\n  )\n}\n\n/**\n * utf8转码url\n * @description 兼容中文url\n */\nexport function normalizeUrl(url = '/') {\n  return encodeURI(url)\n}\n\n/**\n * url添加html后缀\n * @description 兼容服务器ssg，访问index.html之外的html需要后缀\n */\nexport function urlWithHtml(url: string) {\n  return url ? url + '.html' : url\n}\n\nexport function groupBy<T>(arr: T[], key: keyof T) {\n  return arr.reduce<Record<string, T[]>>((pre, cur) => {\n    const valueAsKey = cur[key] as string | number\n\n    if (!pre[valueAsKey]) {\n      pre[valueAsKey] = []\n    }\n\n    pre[valueAsKey].push(cur)\n\n    return pre\n  }, {})\n}\n\nexport function keyBy<T>(arr: T[], key: keyof T) {\n  return arr.reduce<Record<string, T>>((pre, cur) => {\n    const valueAsKey = cur[key] as string | number\n\n    pre[valueAsKey] = cur\n\n    return pre\n  }, {})\n}\n\n/**\n * 分离数字和文本\n */\nexport function splitIndex(text?: string) {\n  const matched = text?.match(/^(\\d+)(\\.?\\s*)(.*)$/)\n  const index = matched?.[1]\n\n  if (index) {\n    return {\n      index: parseInt(index),\n      text: matched?.[3] ?? '',\n    }\n  } else {\n    return {\n      index: 0,\n      text: text ?? '',\n    }\n  }\n}\n","import { normalizeUrl } from '@/shared/utils'\nimport { Suspense } from 'react'\nimport { useRoutes } from 'react-router-dom'\nimport routes from 'virtual:routes'\n\n/**\n * 路由内容\n * @description 通过虚拟模块提供spa路由内容\n */\nexport function Content({ location = '/' }) {\n  const element = useRoutes(routes, normalizeUrl(location))\n\n  return <Suspense fallback={null}>{element}</Suspense>\n}\n","import { PageData } from '@/shared/types'\nimport { createContext, useContext } from 'react'\n\ninterface Props {\n  pageData?: PageData\n  setPageData?: React.Dispatch<React.SetStateAction<PageData | undefined>>\n}\n\nexport const PageDataContext = createContext<Props>({})\n\nexport const usePageData = () => {\n  return useContext(PageDataContext)\n}\n","import classNames from 'classnames'\nimport { DOMAttributes, PropsWithChildren } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nexport function Link({\n  href = '/',\n  className,\n  children,\n  onClick,\n}: PropsWithChildren<{\n  href?: string\n  className?: string\n  onClick?: () => void\n}>) {\n  const navigate = useNavigate()\n\n  // TODO 通过配置文件区分mpa与spa模式，解决mpa的跳转后侧边栏移动等问题\n  const isSpa = true\n\n  // spa模式是首页使用ssg请求html，后续跳转使用csg路由\n  const isCsr = isSpa && !href?.startsWith('http')\n\n  const handleCsrNavigate: DOMAttributes<HTMLAnchorElement>['onClick'] = async (\n    event,\n  ) => {\n    event.preventDefault()\n\n    onClick?.()\n\n    navigate(href.slice(1))\n  }\n\n  return (\n    <a\n      href={href}\n      {...(isCsr ? { onClick: handleCsrNavigate } : { onClick })}\n      className={classNames('cursor-pointer', className)}\n    >\n      {children}\n    </a>\n  )\n}\n"],"mappings":"0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,EAAA,SAAAC,EAAA,oBAAAC,EAAA,gBAAAC,IAAA,eAAAC,EAAAN,GCYO,SAASO,EAAaC,EAAM,IAAK,CACtC,OAAO,UAAUA,CAAG,CACtB,CCbA,IAAAC,EAAyB,iBACzBC,EAA0B,4BAC1BC,EAAmB,+BASVC,EAAA,6BAHF,SAASC,EAAQ,CAAE,SAAAC,EAAW,GAAI,EAAG,CAC1C,IAAMC,KAAU,aAAU,EAAAC,QAAQC,EAAaH,CAAQ,CAAC,EAExD,SAAO,OAAC,YAAS,SAAU,KAAO,SAAAC,EAAQ,CAC5C,CCZA,IAAAG,EAA0C,iBAO7BC,KAAkB,iBAAqB,CAAC,CAAC,EAEzCC,EAAc,OAClB,cAAWD,CAAe,ECXnC,IAAAE,EAAuB,2BAEvBC,EAA4B,4BA+BxBC,EAAA,6BA7BG,SAASC,EAAK,CACnB,KAAAC,EAAO,IACP,UAAAC,EACA,SAAAC,EACA,QAAAC,CACF,EAII,CACF,IAAMC,KAAW,eAAY,EAMvBC,EAHQ,IAGS,CAACL,GAAM,WAAW,MAAM,EAY/C,SACE,OAAC,KACC,KAAMA,EACL,GAAIK,EAAQ,CAAE,QAboD,MACrEC,GACG,CACHA,EAAM,eAAe,EAErBH,IAAU,EAEVC,EAASJ,EAAK,MAAM,CAAC,CAAC,CACxB,CAK8C,EAAI,CAAE,QAAAG,CAAQ,EACxD,aAAW,EAAAI,SAAW,iBAAkBN,CAAS,EAEhD,SAAAC,EACH,CAEJ","names":["src_exports","__export","Content","Link","PageDataContext","usePageData","__toCommonJS","normalizeUrl","url","import_react","import_react_router_dom","import_virtual_routes","import_jsx_runtime","Content","location","element","routes","normalizeUrl","import_react","PageDataContext","usePageData","import_classnames","import_react_router_dom","import_jsx_runtime","Link","href","className","children","onClick","navigate","isCsr","event","classNames"]}